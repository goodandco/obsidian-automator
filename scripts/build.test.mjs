import { execSync } from 'node:child_process';
import { readFileSync, statSync } from 'node:fs';

function run(cmd) {
  execSync(cmd, { stdio: 'inherit' });
}
function assert(condition, message) {
  if (!condition) throw new Error(message);
}
try {
  console.log('[test] Running production build...');
  run('npm run build');

  console.log('[test] Verifying main.js exists...');
  const stat = statSync('main.js');
  assert(stat.isFile(), 'main.js is not a file');
  assert(stat.size > 1000, `main.js seems too small: ${stat.size}`);

  console.log('[test] Checking esbuild banner presence...');
  const content = readFileSync('main.js', 'utf8');
  assert(content.includes('THIS IS A GENERATED/BUNDLED FILE BY ESBUILD'), 'Banner not found in main.js');

  console.log('[test] SUCCESS: Build produced a bundled main.js with expected banner.');
} catch (e) {
  console.error('[test] FAILURE:', e.message || e);
  process.exit(1);
}
